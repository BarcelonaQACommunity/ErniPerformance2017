// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UserStories.AcceptanceTest.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Add Task view - How to create different tasks", Description="\tIn order to create different tasks\r\n\tAs a user\r\n\tI want to create tasks", SourceFile="Features\\AddTaskView.feature", SourceLine=0)]
    public partial class AddTaskView_HowToCreateDifferentTasksFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AddTaskView.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Add Task view - How to create different tasks", "\tIn order to create different tasks\r\n\tAs a user\r\n\tI want to create tasks", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void AddTaskView_CheckTheValuesFromTheTask(string title, string content, string color, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ID:FCA58CA7-D7F7-4F20-B65E-269A8864E47E",
                    "Owner:",
                    "Juan",
                    "Serna"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Task View - Check the values from the task", @__tags);
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("The application is running with the \'Default\' configuration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("The user goes to the add task view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When(string.Format("The user sets the task with the title \'{0}\', the content \'{1}\', and the color \'{2" +
                        "}\'", title, content, color), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then(string.Format("The user check that the title \'{0}\' and the content \'{1}\' from the task are the c" +
                        "orrect values", title, content), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add Task View - Check the values from the task, Title 1", new string[] {
                "ID:FCA58CA7-D7F7-4F20-B65E-269A8864E47E",
                "Owner:",
                "Juan",
                "Serna"}, SourceLine=15)]
        public virtual void AddTaskView_CheckTheValuesFromTheTask_Title1()
        {
            this.AddTaskView_CheckTheValuesFromTheTask("Title 1", "This is a content 1", "Blue", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add Task View - Check the values from the task, Title 2", new string[] {
                "ID:FCA58CA7-D7F7-4F20-B65E-269A8864E47E",
                "Owner:",
                "Juan",
                "Serna"}, SourceLine=15)]
        public virtual void AddTaskView_CheckTheValuesFromTheTask_Title2()
        {
            this.AddTaskView_CheckTheValuesFromTheTask("Title 2", "This is a content 2", "White", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Add Task View - Check the values from the task, Title 3", new string[] {
                "ID:FCA58CA7-D7F7-4F20-B65E-269A8864E47E",
                "Owner:",
                "Juan",
                "Serna"}, SourceLine=15)]
        public virtual void AddTaskView_CheckTheValuesFromTheTask_Title3()
        {
            this.AddTaskView_CheckTheValuesFromTheTask("Title 3", "This is a content 3", "Yellow", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
